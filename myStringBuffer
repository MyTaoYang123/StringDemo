package stringDemo.Character;

public class MyStringBuffer implements IStringBuffer{
	
	int capacity = 24;
	char[] value;
	int length = 0;
	
	//无参构造方法
	public MyStringBuffer() {
		
		value = new char[capacity];
	}
	
	//有参构造方法
	public MyStringBuffer(String str) {
		
		this();
		if(null == str) {
			return;
		}
		
		if(capacity < str.length()) {
			
			capacity = (int) (value.length*1.5f);
			value = new char[capacity];
		}
		
		if(capacity >= str.length()) {
			
			System.arraycopy(str.toCharArray(), 0, value, 0, str.length());
		}
		
		length = str.length();
	}
	
	@Override
	public void append(String str) {
		
		insert(length, str);	
	}

	@Override
	public void append(char c) {
		
		insert(length,String.valueOf(c));	
	}

	@Override
	public void insert(int pos, char b) {
		
		insert(pos,String.valueOf(b));	
	}

	@Override
	public void insert(int pos, String b) {
		
		//边界条件判断
		if(pos < 0) {
			return;
		}
		if(pos > length) {
			return;
		}
		if(null == b) {
			return;
		}
		
		//扩容
		while((length + b.length()) > capacity) {
			
			capacity  = (int) ((length + b.length())*1.5f);
			char[] newValue = new char[capacity];		   //构建新数组
			System.arraycopy(value, 0, newValue, 0, length);
			//把数组a，从0开始长度为length的值复制到数组b，开始值为0.
			value = newValue;		
		}
		
		char[] cs = b.toCharArray();
		//先把已经存在的数据后移
		System.arraycopy(value, pos, value, pos+b.length(), length-pos);
		//把要插入的数据插入到指定位置
		System.arraycopy(cs, 0, value, pos, cs.length);
		
		length += cs.length;
	}

	@Override
	public void delete(int start) {
		delete(start,length);
		
	}

	@Override
	public void delete(int start, int end) {
		//边界条件判断
		if(start < 0) {
			return;
		}
		if(start > length) {
			return;
		}
		if(end < 0) {
			return;
		}
		if(end > length) {
			return;
		}
		if(start >= end) {
			return;
		}
		
		System.arraycopy(value, end, value, start, length - end);
		length -= end-start;
	}

	@Override
	public void reverse() {
		
		for(int i = 0; i < length/2; i++) {
			
			char temp = value[i];
			value[i] = value[length-1-i];
			value[length-1-i] = temp;
		}		
	}

	@Override
	public int length() {
		// TODO Auto-generated method stub
		return length;
	}
	
	//重写toString()方法
	public String toString() {
		
		char[] realvalue = new char[length];
		System.arraycopy(value, 0, realvalue, 0, length);
		return new String(realvalue);
	}

}
